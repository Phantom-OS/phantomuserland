Class version 20190822101032259

method put ordinal 16
--
  arg_count 2						//  @0
  stack_reserve obj=3 int=0				//  @2
; Line 75
  summon this						//  @5
  call m=18 nparm=0					//  @6
  os drop							//  @8
; Line 76
  summon this						//  @9
; Line 76
; key
  get o stk pos=0						//  @10
; Line 76
  const 1							//  @15
  i2o							//  @20
; Line 76
; Line 76
  call m=19 nparm=2					//  @21
; set hp
  set o stk pos=2						//  @23
; Line 76
; Line 77
; hp
  get o stk pos=2						//  @28
; Line 77
; val
  get o stk pos=1						//  @33
; Line 77
  call m=17 nparm=1					//  @38
  os drop							//  @40
; Line 77
; Line 78
  summon this						//  @41
  call m=17 nparm=0					//  @42
  os drop							//  @44
; Line 78
  ret							//  @45
--
method end

method <init> ordinal 23
--
  arg_count 0						//  @0
  ret							//  @2
--
method end

method unlock ordinal 17
--
  ret							//  @0
--
method end

method lock ordinal 18
--
  ret							//  @0
--
method end

method find ordinal 19
--
  arg_count 2						//  @0
  stack_reserve obj=3 int=1				//  @2
; Line 44
  summon this						//  @5
; Line 44
; key
  get o stk pos=0						//  @6
; Line 44
  call m=20 nparm=1					//  @11
  o2i							//  @13
; set bucket
  set i stk pos=0						//  @14
; Line 47
  load fld=0						//  @19
; Line 47
; bucket
  get i stk pos=0						//  @21
  i2o							//  @26
  call m=10 nparm=1					//  @27
; set next
  set o stk pos=2						//  @29
; Line 47
; Line 56
_label_0:	//  @34
; Line 50
; next
  get o stk pos=2						//  @34
; Line 50
  summon null						//  @39
; Line 50
  ptr neq							//  @40
  jz _label_1						//  @41
; Line 53
; Line 52
; key
  get o stk pos=0						//  @46
; Line 52
; next
  get o stk pos=2						//  @51
  call m=19 nparm=0					//  @56
  call m=4 nparm=1					//  @58
  o2i							//  @60
  jz _label_2						//  @61
; Line 53
; next
  get o stk pos=2						//  @66
; Line 53
  ret							//  @71
_label_2:	//  @72
; Line 55
; next
  get o stk pos=2						//  @72
  call m=20 nparm=0					//  @77
; set next
  set o stk pos=2						//  @79
; Line 55
  jmp _label_0						//  @84
_label_1:	//  @89
; Line 56
; Line 60
; Line 59
; put
  get o stk pos=1						//  @89
; Line 59
  const 0							//  @94
  i2o							//  @99
  call m=4 nparm=1					//  @100
  o2i							//  @102
  jz _label_4						//  @103
; Line 60
  summon null						//  @108
; Line 60
  ret							//  @109
_label_4:	//  @110
; Line 60
  summon class phantom.util.hashpair			//  @110
  new							//  @137
  pull depth=0						//  @138
  summon class phantom.util.hashpair			//  @143
  static invoke ord=22 n_param=0				//  @170
  os drop							//  @179
; set next
  set o stk pos=2						//  @180
; Line 62
; Line 64
; next
  get o stk pos=2						//  @185
; Line 64
  load fld=0						//  @190
; Line 64
; bucket
  get i stk pos=0						//  @192
  i2o							//  @197
  call m=10 nparm=1					//  @198
; Line 64
  call m=16 nparm=1					//  @200
  os drop							//  @202
; Line 64
; Line 65
; next
  get o stk pos=2						//  @203
; Line 65
; key
  get o stk pos=0						//  @208
; Line 65
  call m=21 nparm=1					//  @213
  os drop							//  @215
; Line 65
; Line 67
  load fld=0						//  @216
; Line 67
; next
  get o stk pos=2						//  @218
; Line 67
; bucket
  get i stk pos=0						//  @223
  i2o							//  @228
  call m=11 nparm=2					//  @229
  os drop							//  @231
; Line 67
  ret							//  @232
--
method end

method pos ordinal 20
--
  arg_count 1						//  @0
  stack_reserve obj=1 int=0				//  @2
; Line 38
; data
  get o stk pos=0						//  @5
  call m=15 nparm=0					//  @10
  o2i							//  @12
; Line 38
  load fld=1						//  @13
  o2i							//  @15
; Line 38
  iremlu							//  @16
  i2o							//  @17
; Line 38
  ret							//  @18
  ret							//  @19
--
method end

method get ordinal 21
--
  arg_count 1						//  @0
  stack_reserve obj=2 int=0				//  @2
; Line 85
  summon this						//  @5
  call m=18 nparm=0					//  @6
  os drop							//  @8
; Line 86
  summon this						//  @9
; Line 86
; key
  get o stk pos=0						//  @10
; Line 86
  const 0							//  @15
  i2o							//  @20
; Line 86
; Line 86
  call m=19 nparm=2					//  @21
; set hp
  set o stk pos=1						//  @23
; Line 86
; Line 87
  summon this						//  @28
  call m=17 nparm=0					//  @29
  os drop							//  @31
; Line 87
; Line 88
; Line 88
; hp
  get o stk pos=1						//  @32
; Line 88
  summon null						//  @37
; Line 88
  ptr eq							//  @38
  jz _label_0						//  @39
; Line 88
  summon null						//  @44
; Line 88
  ret							//  @45
_label_0:	//  @46
; Line 88
; Line 89
; hp
  get o stk pos=1						//  @46
  call m=18 nparm=0					//  @51
; Line 89
  ret							//  @53
; Line 89
  ret							//  @54
--
method end

method init ordinal 22
--
  arg_count 0						//  @0
; Line 30
  const 20						//  @2
  i2o							//  @7
; set hashsize
  save fld=1						//  @8
  summon class internal.container.array			//  @10
  new							//  @11
  pull depth=0						//  @12
  summon class internal.container.array			//  @17
  static invoke ord=0 n_param=0				//  @18
  os drop							//  @27
; set hashed
  save fld=0						//  @28
; Line 31
  ret							//  @30
--
method end

