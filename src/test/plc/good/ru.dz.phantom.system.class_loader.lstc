Class version 20190822084300527

method <init> ordinal 20
--
  arg_count 0						//  @0
  ret							//  @2
--
method end

method print ordinal 16
--
  arg_count 1						//  @0
  stack_reserve obj=1 int=0				//  @2
; Line 62
  load fld=2						//  @5
; Line 62
; input
  get o stk pos=0						//  @7
; Line 62
  call m=16 nparm=1					//  @12
  os drop							//  @14
  ret							//  @15
--
method end

method load_class ordinal 17
--
  arg_count 1						//  @0
  stack_reserve obj=1 int=0				//  @2
; Line 67
  load fld=2						//  @5
; Line 67
; name
  get o stk pos=0						//  @7
; Line 67
  call m=8 nparm=1					//  @12
; Line 67
  ret							//  @14
  ret							//  @15
--
method end

method get_class ordinal 8
--
  arg_count 1						//  @0
  stack_reserve obj=1 int=0				//  @2
; Line 86
  const 0							//  @5
  i2o							//  @10
; set i
  save fld=4						//  @11
; Line 96
_label_0:	//  @13
; Line 88
  load fld=4						//  @13
  o2i							//  @15
; Line 88
  load fld=1						//  @16
  o2i							//  @18
  ilt <							//  @19
  jz _label_1						//  @20
; Line 94
; Line 90
; name
  get o stk pos=0						//  @25
; Line 90
  load fld=0						//  @30
; Line 90
  load fld=4						//  @32
  call m=10 nparm=1					//  @34
  call m=4 nparm=1					//  @36
  o2i							//  @38
  jz _label_2						//  @39
; Line 93
  load fld=0						//  @44
; Line 93
  load fld=4						//  @46
  o2i							//  @48
; Line 93
  const 1							//  @49
; Line 93
  isum							//  @54
  i2o							//  @55
  call m=10 nparm=1					//  @56
; Line 93
  ret							//  @58
_label_2:	//  @59
; Line 95
  load fld=4						//  @59
  o2i							//  @61
; Line 95
  const 2							//  @62
; Line 95
  isum							//  @67
  i2o							//  @68
; set i
  save fld=4						//  @69
; Line 95
  jmp _label_0						//  @71
_label_1:	//  @76
; Line 96
; Line 99
  summon this						//  @76
; Line 99
; name
  get o stk pos=0						//  @77
; Line 99
  call m=19 nparm=1					//  @82
; Line 99
  ret							//  @84
; Line 99
  ret							//  @85
--
method end

method init ordinal 18
--
  arg_count 1						//  @0
  stack_reserve obj=1 int=0				//  @2
; Line 54
; _boot_object
  get o stk pos=0						//  @5
; set boot_object
  save fld=2						//  @10
; Line 55
  const 0							//  @12
  i2o							//  @17
; set index
  save fld=1						//  @18
; Line 55
  summon class internal.container.array			//  @20
  new							//  @21
; set classes
  save fld=0						//  @22
; Line 57
  ret							//  @24
--
method end

method load ordinal 19
--
  arg_count 1						//  @0
  stack_reserve obj=1 int=0				//  @2
; Line 72
  summon this						//  @5
; Line 72
; name
  get o stk pos=0						//  @6
; Line 72
  call m=17 nparm=1					//  @11
; set new_class
  save fld=3						//  @13
; Line 74
  load fld=0						//  @15
; Line 74
; name
  get o stk pos=0						//  @17
; Line 74
  load fld=1						//  @22
  call m=11 nparm=2					//  @24
  os drop							//  @26
; Line 74
; Line 75
  load fld=1						//  @27
  o2i							//  @29
; Line 75
  const 1							//  @30
; Line 75
  isum							//  @35
  i2o							//  @36
; set index
  save fld=1						//  @37
; Line 75
; Line 76
  load fld=0						//  @39
; Line 76
  load fld=3						//  @41
; Line 76
  load fld=1						//  @43
  call m=11 nparm=2					//  @45
  os drop							//  @47
; Line 76
; Line 77
  load fld=1						//  @48
  o2i							//  @50
; Line 77
  const 1							//  @51
; Line 77
  isum							//  @56
  i2o							//  @57
; set index
  save fld=1						//  @58
; Line 77
; Line 79
  load fld=3						//  @60
; Line 79
  ret							//  @62
; Line 79
  ret							//  @63
--
method end

